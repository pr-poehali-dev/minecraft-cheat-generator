import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Card } from '@/components/ui/card';
import { ScrollArea } from '@/components/ui/scroll-area';
import Icon from '@/components/ui/icon';
import { toast } from 'sonner';

interface Message {
  id: string;
  role: 'user' | 'assistant';
  content: string;
}

interface CheatFeature {
  name: string;
  enabled: boolean;
}

const Index = () => {
  const [messages, setMessages] = useState<Message[]>([
    {
      id: '1',
      role: 'assistant',
      content: '–ü—Ä–∏–≤–µ—Ç! üëæ –Ø –ø–æ–º–æ–≥—É —Å–æ–∑–¥–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π —á–∏—Ç –¥–ª—è Minecraft Java. –û–ø–∏—à–∏, –∫–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–µ–±–µ –Ω—É–∂–Ω—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: killaura, fly, xray, speed hack, anti-knockback)'
    }
  ]);
  const [input, setInput] = useState('');
  const [currentCheat, setCurrentCheat] = useState<CheatFeature[]>([]);
  const [cheatName, setCheatName] = useState('');

  const handleSend = () => {
    if (!input.trim()) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      role: 'user',
      content: input
    };

    setMessages(prev => [...prev, userMessage]);

    setTimeout(() => {
      const features = extractFeatures(input);
      if (features.length > 0) {
        setCurrentCheat(features);
        if (!cheatName) {
          setCheatName(`CustomCheat_${Date.now()}`);
        }
      }

      const assistantMessage: Message = {
        id: (Date.now() + 1).toString(),
        role: 'assistant',
        content: generateResponse(input, features)
      };

      setMessages(prev => [...prev, assistantMessage]);
    }, 1000);

    setInput('');
  };

  const extractFeatures = (text: string): CheatFeature[] => {
    const keywords: Record<string, string> = {
      'killaura': 'KillAura',
      'fly': 'Fly Hack',
      'xray': 'X-Ray',
      'speed': 'Speed Hack',
      'bhop': 'Bunny Hop',
      'anti': 'Anti-Knockback',
      'aimbot': 'AimBot',
      'esp': 'ESP (Wallhack)',
      'scaffold': 'Scaffold',
      'velocity': 'Velocity',
      'fullbright': 'FullBright',
      'nuker': 'Nuker',
      '–∞–≤—Ç–æ–∫–ª–∏–∫': 'Auto Clicker',
      '–º–µ–Ω—é': 'GUI Menu'
    };

    const features: CheatFeature[] = [];
    const lowerText = text.toLowerCase();

    Object.entries(keywords).forEach(([key, name]) => {
      if (lowerText.includes(key)) {
        features.push({ name, enabled: true });
      }
    });

    return features;
  };

  const generateResponse = (userInput: string, features: CheatFeature[]): string => {
    if (features.length === 0) {
      return '–£–∫–∞–∂–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —á–∏—Ç–∞! –ù–∞–ø—Ä–∏–º–µ—Ä: "–¥–æ–±–∞–≤—å killaura, fly –∏ xray" –∏–ª–∏ "—Å–æ–∑–¥–∞–π —á–∏—Ç —Å –∞–≤—Ç–æ–∫–ª–∏–∫–æ–º –∏ anti-knockback"';
    }

    const featureList = features.map(f => f.name).join(', ');
    return `‚úÖ –°–æ–∑–¥–∞—é —á–∏—Ç —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏: ${featureList}\n\n–î–æ–±–∞–≤–ª–µ–Ω—ã –º–æ–¥—É–ª–∏:\n${features.map(f => `‚Ä¢ ${f.name} - –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω`).join('\n')}\n\n–ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å —Å–∫–∞—á–∞—Ç—å ZIP-–∞—Ä—Ö–∏–≤ —Å –∏—Å—Ö–æ–¥–Ω–∏–∫–∞–º–∏ –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë —Ñ—É–Ω–∫—Ü–∏–π.`;
  };

  const handleDownload = () => {
    if (currentCheat.length === 0) {
      toast.error('–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π —á–∏—Ç –≤ —á–∞—Ç–µ!');
      return;
    }

    const cheatCode = generateCheatCode();
    const blob = new Blob([cheatCode], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${cheatName}.txt`;
    a.click();
    URL.revokeObjectURL(url);

    toast.success('–ß–∏—Ç —Å–∫–∞—á–∞–Ω! –¢–µ–ø–µ—Ä—å —Å–∫–æ–º–ø–∏–ª–∏—Ä—É–π –µ–≥–æ –ª–æ–∫–∞–ª—å–Ω–æ');
  };

  const generateCheatCode = (): string => {
    return `// ${cheatName} - Minecraft Java Cheat
// Generated by Minecraft Cheat Generator

package com.cheat.${cheatName.toLowerCase()};

import net.minecraft.client.Minecraft;
import net.minecraftforge.fml.common.Mod;

@Mod(modid = "${cheatName}", version = "1.0")
public class ${cheatName} {
    
    // Features
${currentCheat.map(f => `    // ${f.name}: ${f.enabled ? 'ENABLED' : 'DISABLED'}`).join('\n')}
    
    public static void init() {
${currentCheat.map(f => `        register${f.name.replace(/[^a-zA-Z]/g, '')}();`).join('\n')}
    }
    
${currentCheat.map(f => `    
    private static void register${f.name.replace(/[^a-zA-Z]/g, '')}() {
        // TODO: Implement ${f.name} module
        System.out.println("${f.name} module loaded");
    }`).join('\n')}
}

// Compile with: javac -cp minecraft-forge.jar ${cheatName}.java
// Build: jar cvf ${cheatName}.jar com/
`;
  };

  return (
    <div className="min-h-screen bg-[#C6C6C6] p-4 md:p-8">
      <div className="max-w-7xl mx-auto">
        <div className="text-center mb-8">
          <h1 className="pixel-font text-2xl md:text-4xl text-minecraft-brown mb-4 pixelated">
            MINECRAFT CHEAT GENERATOR
          </h1>
          <p className="text-minecraft-stone font-medium">
            –°–æ–∑–¥–∞–π —Å–≤–æ–π —á–∏—Ç —á–µ—Ä–µ–∑ AI —á–∞—Ç
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          <div className="lg:col-span-2">
            <Card className="minecraft-border bg-white p-0 overflow-hidden">
              <div className="bg-minecraft-brown p-4 border-b-4 border-minecraft-stone">
                <h2 className="pixel-font text-white text-sm">CHEAT CREATOR</h2>
              </div>

              <ScrollArea className="h-[400px] p-4">
                <div className="space-y-4">
                  {messages.map((msg) => (
                    <div
                      key={msg.id}
                      className={`chat-message flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}
                    >
                      <div
                        className={`max-w-[80%] p-3 ${
                          msg.role === 'user'
                            ? 'bg-minecraft-green text-white'
                            : 'bg-gray-200 text-gray-800'
                        }`}
                        style={{
                          boxShadow: msg.role === 'user' 
                            ? '0 4px 0 #3A7F2A' 
                            : '0 4px 0 #999'
                        }}
                      >
                        <p className="text-sm whitespace-pre-line">{msg.content}</p>
                      </div>
                    </div>
                  ))}
                </div>
              </ScrollArea>

              <div className="p-4 border-t-4 border-minecraft-stone bg-gray-100">
                <div className="flex gap-2">
                  <Input
                    value={input}
                    onChange={(e) => setInput(e.target.value)}
                    onKeyPress={(e) => e.key === 'Enter' && handleSend()}
                    placeholder="–û–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —á–∏—Ç–∞..."
                    className="flex-1 border-2 border-minecraft-stone"
                  />
                  <Button
                    onClick={handleSend}
                    className="minecraft-btn"
                  >
                    <Icon name="Send" size={16} />
                  </Button>
                </div>
              </div>
            </Card>
          </div>

          <div className="space-y-6">
            <Card className="minecraft-border bg-white p-0">
              <div className="bg-minecraft-brown p-4 border-b-4 border-minecraft-stone">
                <h2 className="pixel-font text-white text-xs">YOUR CHEAT</h2>
              </div>

              <div className="p-4 space-y-4">
                <div>
                  <label className="text-xs font-bold text-minecraft-stone mb-2 block">
                    PROJECT NAME
                  </label>
                  <Input
                    value={cheatName}
                    onChange={(e) => setCheatName(e.target.value)}
                    placeholder="CheatName"
                    className="border-2 border-minecraft-stone"
                  />
                </div>

                <div>
                  <label className="text-xs font-bold text-minecraft-stone mb-2 block">
                    FUNCTIONS
                  </label>
                  <ScrollArea className="h-[200px]">
                    {currentCheat.length === 0 ? (
                      <p className="text-sm text-gray-500">–ß–∞—Ç —Å–æ–∑–¥–∞—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏...</p>
                    ) : (
                      <div className="space-y-2">
                        {currentCheat.map((feature, idx) => (
                          <div
                            key={idx}
                            className="flex items-center gap-2 p-2 bg-minecraft-green/20 border-l-4 border-minecraft-green"
                          >
                            <div className="w-3 h-3 bg-minecraft-gold pixelated"></div>
                            <span className="text-sm font-medium">{feature.name}</span>
                          </div>
                        ))}
                      </div>
                    )}
                  </ScrollArea>
                </div>
              </div>
            </Card>

            <button
              onClick={handleDownload}
              className="minecraft-btn w-full"
              disabled={currentCheat.length === 0}
            >
              <div className="flex items-center justify-center gap-2">
                <Icon name="Download" size={16} />
                <span>DOWNLOAD</span>
              </div>
            </button>

            <div className="flex gap-2 justify-center pixelated">
              <div className="w-8 h-8 bg-minecraft-green hover:opacity-80 cursor-pointer transition"></div>
              <div className="w-8 h-8 bg-minecraft-brown hover:opacity-80 cursor-pointer transition"></div>
              <div className="w-8 h-8 bg-minecraft-gold hover:opacity-80 cursor-pointer transition"></div>
              <div className="w-8 h-8 bg-minecraft-stone hover:opacity-80 cursor-pointer transition"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Index;
